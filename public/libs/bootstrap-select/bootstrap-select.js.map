{"version":3,"sources":["bootstrap-select.js"],"names":[],"mappingsfile":"bootstrap-select.js","sourcesContent":["/*!\r\n * Bootstrap-select v1.10.0 (http://silviomoreto.github.io/bootstrap-select)\r\n *\r\n * Copyright 2013-2016 bootstrap-select\r\n * Licensed under MIT (https://github.com/silviomoreto/bootstrap-select/blob/master/LICENSE)\r\n */\r\n\r\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([\"jquery\"], function (a0) {\n      return (factory(a0));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"jquery\"));\n  } else {\n    factory(jQuery);\n  }\n}(this, function (jQuery) {\n\n(function ($) {\r\n  'use strict';\r\n\r\n  //<editor-fold desc=\"Shims\">\r\n  if (!String.prototype.includes) {\r\n    (function () {\r\n      'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\r\n      var toString = {}.toString;\r\n      var defineProperty = (function () {\r\n        // IE 8 only supports `Object.defineProperty` on DOM elements\r\n        try {\r\n          var object = {};\r\n          var $defineProperty = Object.defineProperty;\r\n          var result = $defineProperty(object, object, object) && $defineProperty;\r\n        } catch (error) {\r\n        }\r\n        return result;\r\n      }());\r\n      var indexOf = ''.indexOf;\r\n      var includes = function (search) {\r\n        if (this == null) {\r\n          throw new TypeError();\r\n        }\r\n        var string = String(this);\r\n        if (search && toString.call(search) == '[object RegExp]') {\r\n          throw new TypeError();\r\n        }\r\n        var stringLength = string.length;\r\n        var searchString = String(search);\r\n        var searchLength = searchString.length;\r\n        var position = arguments.length > 1 ? arguments[1] : undefined;\r\n        // `ToInteger`\r\n        var pos = position ? Number(position) : 0;\r\n        if (pos != pos) { // better `isNaN`\r\n          pos = 0;\r\n        }\r\n        var start = Math.min(Math.max(pos, 0), stringLength);\r\n        // Avoid the `indexOf` call if no match is possible\r\n        if (searchLength + start > stringLength) {\r\n          return false;\r\n        }\r\n        return indexOf.call(string, searchString, pos) != -1;\r\n      };\r\n      if (defineProperty) {\r\n        defineProperty(String.prototype, 'includes', {\r\n          'value': includes,\r\n          'configurable': true,\r\n          'writable': true\r\n        });\r\n      } else {\r\n        String.prototype.includes = includes;\r\n      }\r\n    }());\r\n  }\r\n\r\n  if (!String.prototype.startsWith) {\r\n    (function () {\r\n      'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\r\n      var defineProperty = (function () {\r\n        // IE 8 only supports `Object.defineProperty` on DOM elements\r\n        try {\r\n          var object = {};\r\n          var $defineProperty = Object.defineProperty;\r\n          var result = $defineProperty(object, object, object) && $defineProperty;\r\n        } catch (error) {\r\n        }\r\n        return result;\r\n      }());\r\n      var toString = {}.toString;\r\n      var startsWith = function (search) {\r\n        if (this == null) {\r\n          throw new TypeError();\r\n        }\r\n        var string = String(this);\r\n        if (search && toString.call(search) == '[object RegExp]') {\r\n          throw new TypeError();\r\n        }\r\n        var stringLength = string.length;\r\n        var searchString = String(search);\r\n        var searchLength = searchString.length;\r\n        var position = arguments.length > 1 ? arguments[1] : undefined;\r\n        // `ToInteger`\r\n        var pos = position ? Number(position) : 0;\r\n        if (pos != pos) { // better `isNaN`\r\n          pos = 0;\r\n        }\r\n        var start = Math.min(Math.max(pos, 0), stringLength);\r\n        // Avoid the `indexOf` call if no match is possible\r\n        if (searchLength + start > stringLength) {\r\n          return false;\r\n        }\r\n        var index = -1;\r\n        while (++index < searchLength) {\r\n          if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      };\r\n      if (defineProperty) {\r\n        defineProperty(String.prototype, 'startsWith', {\r\n          'value': startsWith,\r\n          'configurable': true,\r\n          'writable': true\r\n        });\r\n      } else {\r\n        String.prototype.startsWith = startsWith;\r\n      }\r\n    }());\r\n  }\r\n\r\n  if (!Object.keys) {\r\n    Object.keys = function (\r\n      o, // object\r\n      k, // key\r\n      r  // result array\r\n      ){\r\n      // initialize object and result\r\n      r=[];\r\n      // iterate over object keys\r\n      for (k in o)\r\n          // fill result array with non-prototypical keys\r\n        r.hasOwnProperty.call(o, k) && r.push(k);\r\n      // return result\r\n      return r;\r\n    };\r\n  }\r\n\r\n  $.fn.triggerNative = function (eventName) {\r\n    var el = this[0],\r\n        event;\r\n\r\n    if (el.dispatchEvent) {\r\n      if (typeof Event === 'function') {\r\n        // For modern browsers\r\n        event = new Event(eventName, {\r\n          bubbles: true\r\n        });\r\n      } else {\r\n        // For IE since it doesn't support Event constructor\r\n        event = document.createEvent('Event');\r\n        event.initEvent(eventName, true, false);\r\n      }\r\n\r\n      el.dispatchEvent(event);\r\n    } else {\r\n      if (el.fireEvent) {\r\n        event = document.createEventObject();\r\n        event.eventType = eventName;\r\n        el.fireEvent('on' + eventName, event);\r\n      }\r\n\r\n      this.trigger(eventName);\r\n    }\r\n  };\r\n  //</editor-fold>\r\n\r\n  // Case insensitive contains search\r\n  $.expr[':'].icontains = function (obj, index, meta) {\r\n    var $obj = $(obj);\r\n    var haystack = ($obj.data('tokens') || $obj.text()).toUpperCase();\r\n    return haystack.includes(meta[3].toUpperCase());\r\n  };\r\n\r\n  // Case insensitive begins search\r\n  $.expr[':'].ibegins = function (obj, index, meta) {\r\n    var $obj = $(obj);\r\n    var haystack = ($obj.data('tokens') || $obj.text()).toUpperCase();\r\n    return haystack.startsWith(meta[3].toUpperCase());\r\n  };\r\n\r\n  // Case and accent insensitive contains search\r\n  $.expr[':'].aicontains = function (obj, index, meta) {\r\n    var $obj = $(obj);\r\n    var haystack = ($obj.data('tokens') || $obj.data('normalizedText') || $obj.text()).toUpperCase();\r\n    return haystack.includes(meta[3].toUpperCase());\r\n  };\r\n\r\n  // Case and accent insensitive begins search\r\n  $.expr[':'].aibegins = function (obj, index, meta) {\r\n    var $obj = $(obj);\r\n    var haystack = ($obj.data('tokens') || $obj.data('normalizedText') || $obj.text()).toUpperCase();\r\n    return haystack.startsWith(meta[3].toUpperCase());\r\n  };\r\n\r\n  /**\r\n   * Remove all diatrics from the given text.\r\n   * @access private\r\n   * @param {String} text\r\n   * @returns {String}\r\n   */\r\n  function normalizeToBase(text) {\r\n    var rExps = [\r\n      {re: /[\\xC0-\\xC6]/g, ch: \"A\"},\r\n      {re: /[\\xE0-\\xE6]/g, ch: \"a\"},\r\n      {re: /[\\xC8-\\xCB]/g, ch: \"E\"},\r\n      {re: /[\\xE8-\\xEB]/g, ch: \"e\"},\r\n      {re: /[\\xCC-\\xCF]/g, ch: \"I\"},\r\n      {re: /[\\xEC-\\xEF]/g, ch: \"i\"},\r\n      {re: /[\\xD2-\\xD6]/g, ch: \"O\"},\r\n      {re: /[\\xF2-\\xF6]/g, ch: \"o\"},\r\n      {re: /[\\xD9-\\xDC]/g, ch: \"U\"},\r\n      {re: /[\\xF9-\\xFC]/g, ch: \"u\"},\r\n      {re: /[\\xC7-\\xE7]/g, ch: \"c\"},\r\n      {re: /[\\xD1]/g, ch: \"N\"},\r\n      {re: /[\\xF1]/g, ch: \"n\"}\r\n    ];\r\n    $.each(rExps, function () {\r\n      text = text.replace(this.re, this.ch);\r\n    });\r\n    return text;\r\n  }\r\n\r\n\r\n  function htmlEscape(html) {\r\n    var escapeMap = {\r\n      '&': '&amp;',\r\n      '<': '&lt;',\r\n      '>': '&gt;',\r\n      '\"': '&quot;',\r\n      \"'\": '&#x27;',\r\n      '`': '&#x60;'\r\n    };\r\n    var source = '(?:' + Object.keys(escapeMap).join('|') + ')',\r\n        testRegexp = new RegExp(source),\r\n        replaceRegexp = new RegExp(source, 'g'),\r\n        string = html == null ? '' : '' + html;\r\n    return testRegexp.test(string) ? string.replace(replaceRegexp, function (match) {\r\n      return escapeMap[match];\r\n    }) : string;\r\n  }\r\n\r\n  var Selectpicker = function (element, options, e) {\r\n    if (e) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }\r\n\r\n    this.$element = $(element);\r\n    this.$newElement = null;\r\n    this.$button = null;\r\n    this.$menu = null;\r\n    this.$lis = null;\r\n    this.options = options;\r\n\r\n    // If we have no title yet, try to pull it from the html title attribute (jQuery doesnt' pick it up as it's not a\r\n    // data-attribute)\r\n    if (this.options.title === null) {\r\n      this.options.title = this.$element.attr('title');\r\n    }\r\n\r\n    //Expose public methods\r\n    this.val = Selectpicker.prototype.val;\r\n    this.render = Selectpicker.prototype.render;\r\n    this.refresh = Selectpicker.prototype.refresh;\r\n    this.setStyle = Selectpicker.prototype.setStyle;\r\n    this.selectAll = Selectpicker.prototype.selectAll;\r\n    this.deselectAll = Selectpicker.prototype.deselectAll;\r\n    this.destroy = Selectpicker.prototype.destroy;\r\n    this.remove = Selectpicker.prototype.remove;\r\n    this.show = Selectpicker.prototype.show;\r\n    this.hide = Selectpicker.prototype.hide;\r\n\r\n    this.init();\r\n  };\r\n\r\n  Selectpicker.VERSION = '1.10.0';\r\n\r\n  // part of this is duplicated in i18n/defaults-en_US.js. Make sure to update both.\r\n  Selectpicker.DEFAULTS = {\r\n    noneSelectedText: 'Nothing selected',\r\n    noneResultsText: 'No results matched {0}',\r\n    countSelectedText: function (numSelected, numTotal) {\r\n      return (numSelected == 1) ? \"{0} item selected\" : \"{0} items selected\";\r\n    },\r\n    maxOptionsText: function (numAll, numGroup) {\r\n      return [\r\n        (numAll == 1) ? 'Limit reached ({n} item max)' : 'Limit reached ({n} items max)',\r\n        (numGroup == 1) ? 'Group limit reached ({n} item max)' : 'Group limit reached ({n} items max)'\r\n      ];\r\n    },\r\n    selectAllText: 'Select All',\r\n    deselectAllText: 'Deselect All',\r\n    doneButton: false,\r\n    doneButtonText: 'Close',\r\n    multipleSeparator: ', ',\r\n    styleBase: 'btn',\r\n    style: 'btn-default',\r\n    size: 'auto',\r\n    title: null,\r\n    selectedTextFormat: 'values',\r\n    width: false,\r\n    container: false,\r\n    hideDisabled: false,\r\n    showSubtext: false,\r\n    showIcon: true,\r\n    showContent: true,\r\n    dropupAuto: true,\r\n    header: false,\r\n    liveSearch: false,\r\n    liveSearchPlaceholder: null,\r\n    liveSearchNormalize: false,\r\n    liveSearchStyle: 'contains',\r\n    actionsBox: false,\r\n    iconBase: 'glyphicon',\r\n    tickIcon: 'glyphicon-ok',\r\n    showTick: false,\r\n    template: {\r\n      caret: '<span class=\"caret\"></span>'\r\n    },\r\n    maxOptions: false,\r\n    mobile: false,\r\n    selectOnTab: false,\r\n    dropdownAlignRight: false\r\n  };\r\n\r\n  Selectpicker.prototype = {\r\n\r\n    constructor: Selectpicker,\r\n\r\n    init: function () {\r\n      var that = this,\r\n          id = this.$element.attr('id');\r\n\r\n      this.$element.addClass('bs-select-hidden');\r\n\r\n      // store originalIndex (key) and newIndex (value) in this.liObj for fast accessibility\r\n      // allows us to do this.$lis.eq(that.liObj[index]) instead of this.$lis.filter('[data-original-index=\"' + index + '\"]')\r\n      this.liObj = {};\r\n      this.multiple = this.$element.prop('multiple');\r\n      this.autofocus = this.$element.prop('autofocus');\r\n      this.$newElement = this.createView();\r\n      this.$element\r\n        .after(this.$newElement)\r\n        .appendTo(this.$newElement);\r\n      this.$button = this.$newElement.children('button');\r\n      this.$menu = this.$newElement.children('.dropdown-menu');\r\n      this.$menuInner = this.$menu.children('.inner');\r\n      this.$searchbox = this.$menu.find('input');\r\n\r\n      this.$element.removeClass('bs-select-hidden');\r\n\r\n      if (this.options.dropdownAlignRight)\r\n        this.$menu.addClass('dropdown-menu-right');\r\n\r\n      if (typeof id !== 'undefined') {\r\n        this.$button.attr('data-id', id);\r\n        $('label[for=\"' + id + '\"]').click(function (e) {\r\n          e.preventDefault();\r\n          that.$button.focus();\r\n        });\r\n      }\r\n\r\n      this.checkDisabled();\r\n      this.clickListener();\r\n      if (this.options.liveSearch) this.liveSearchListener();\r\n      this.render();\r\n      this.setStyle();\r\n      this.setWidth();\r\n      if (this.options.container) this.selectPosition();\r\n      this.$menu.data('this', this);\r\n      this.$newElement.data('this', this);\r\n      if (this.options.mobile) this.mobile();\r\n\r\n      this.$newElement.on({\r\n        'hide.bs.dropdown': function (e) {\r\n          that.$element.trigger('hide.bs.select', e);\r\n        },\r\n        'hidden.bs.dropdown': function (e) {\r\n          that.$element.trigger('hidden.bs.select', e);\r\n        },\r\n        'show.bs.dropdown': function (e) {\r\n          that.$element.trigger('show.bs.select', e);\r\n        },\r\n        'shown.bs.dropdown': function (e) {\r\n          that.$element.trigger('shown.bs.select', e);\r\n        }\r\n      });\r\n\r\n      if (that.$element[0].hasAttribute('required')) {\r\n        this.$element.on('invalid', function () {\r\n          that.$button\r\n            .addClass('bs-invalid')\r\n            .focus();\r\n          \r\n          that.$element.on({\r\n            'focus.bs.select': function () {\r\n              that.$button.focus();\r\n              that.$element.off('focus.bs.select');\r\n            },\r\n            'shown.bs.select': function () {\r\n              that.$element\r\n                .val(that.$element.val()) // set the value to hide the validation message in Chrome when menu is opened\r\n                .off('shown.bs.select');\r\n            },\r\n            'rendered.bs.select': function () {\r\n              // if select is no longer invalid, remove the bs-invalid class\r\n              if (this.validity.valid) that.$button.removeClass('bs-invalid');\r\n              that.$element.off('rendered.bs.select');\r\n            }\r\n          });\r\n          \r\n        });\r\n      }\r\n\r\n      setTimeout(function () {\r\n        that.$element.trigger('loaded.bs.select');\r\n      });\r\n    },\r\n\r\n    createDropdown: function () {\r\n      // Options\r\n      // If we are multiple or showTick option is set, then add the show-tick class\r\n      var showTick = (this.multiple || this.options.showTick) ? ' show-tick' : '',\r\n          inputGroup = this.$element.parent().hasClass('input-group') ? ' input-group-btn' : '',\r\n          autofocus = this.autofocus ? ' autofocus' : '';\r\n      // Elements\r\n      var header = this.options.header ? '<div class=\"popover-title\"><button type=\"button\" class=\"close\" aria-hidden=\"true\">&times;</button>' + this.options.header + '</div>' : '';\r\n      var searchbox = this.options.liveSearch ?\r\n      '<div class=\"bs-searchbox\">' +\r\n      '<input type=\"text\" class=\"form-control\" autocomplete=\"off\"' +\r\n      (null === this.options.liveSearchPlaceholder ? '' : ' placeholder=\"' + htmlEscape(this.options.liveSearchPlaceholder) + '\"') + '>' +\r\n      '</div>'\r\n          : '';\r\n      var actionsbox = this.multiple && this.options.actionsBox ?\r\n      '<div class=\"bs-actionsbox\">' +\r\n      '<div class=\"btn-group btn-group-sm btn-block\">' +\r\n      '<button type=\"button\" class=\"actions-btn bs-select-all btn btn-default\">' +\r\n      this.options.selectAllText +\r\n      '</button>' +\r\n      '<button type=\"button\" class=\"actions-btn bs-deselect-all btn btn-default\">' +\r\n      this.options.deselectAllText +\r\n      '</button>' +\r\n      '</div>' +\r\n      '</div>'\r\n          : '';\r\n      var donebutton = this.multiple && this.options.doneButton ?\r\n      '<div class=\"bs-donebutton\">' +\r\n      '<div class=\"btn-group btn-block\">' +\r\n      '<button type=\"button\" class=\"btn btn-sm btn-default\">' +\r\n      this.options.doneButtonText +\r\n      '</button>' +\r\n      '</div>' +\r\n      '</div>'\r\n          : '';\r\n      var drop =\r\n          '<div class=\"btn-group bootstrap-select' + showTick + inputGroup + '\">' +\r\n          '<button type=\"button\" class=\"' + this.options.styleBase + ' dropdown-toggle\" data-toggle=\"dropdown\"' + autofocus + '>' +\r\n          '<span class=\"filter-option pull-left\"></span>&nbsp;' +\r\n          '<span class=\"bs-caret\">' +\r\n          this.options.template.caret +\r\n          '</span>' +\r\n          '</button>' +\r\n          '<div class=\"dropdown-menu open\">' +\r\n          header +\r\n          searchbox +\r\n          actionsbox +\r\n          '<ul class=\"dropdown-menu inner\" role=\"menu\">' +\r\n          '</ul>' +\r\n          donebutton +\r\n          '</div>' +\r\n          '</div>';\r\n\r\n      return $(drop);\r\n    },\r\n\r\n    createView: function () {\r\n      var $drop = this.createDropdown(),\r\n          li = this.createLi();\r\n\r\n      $drop.find('ul')[0].innerHTML = li;\r\n      return $drop;\r\n    },\r\n\r\n    reloadLi: function () {\r\n      //Remove all children.\r\n      this.destroyLi();\r\n      //Re build\r\n      var li = this.createLi();\r\n      this.$menuInner[0].innerHTML = li;\r\n    },\r\n\r\n    destroyLi: function () {\r\n      this.$menu.find('li').remove();\r\n    },\r\n\r\n    createLi: function () {\r\n      var that = this,\r\n          _li = [],\r\n          optID = 0,\r\n          titleOption = document.createElement('option'),\r\n          liIndex = -1; // increment liIndex whenever a new <li> element is created to ensure liObj is correct\r\n\r\n      // Helper functions\r\n      /**\r\n       * @param content\r\n       * @param [index]\r\n       * @param [classes]\r\n       * @param [optgroup]\r\n       * @returns {string}\r\n       */\r\n      var generateLI = function (content, index, classes, optgroup) {\r\n        return '<li' +\r\n            ((typeof classes !== 'undefined' & '' !== classes) ? ' class=\"' + classes + '\"' : '') +\r\n            ((typeof index !== 'undefined' & null !== index) ? ' data-original-index=\"' + index + '\"' : '') +\r\n            ((typeof optgroup !== 'undefined' & null !== optgroup) ? 'data-optgroup=\"' + optgroup + '\"' : '') +\r\n            '>' + content + '</li>';\r\n      };\r\n\r\n      /**\r\n       * @param text\r\n       * @param [classes]\r\n       * @param [inline]\r\n       * @param [tokens]\r\n       * @returns {string}\r\n       */\r\n      var generateA = function (text, classes, inline, tokens) {\r\n        return '<a tabindex=\"0\"' +\r\n            (typeof classes !== 'undefined' ? ' class=\"' + classes + '\"' : '') +\r\n            (typeof inline !== 'undefined' ? ' style=\"' + inline + '\"' : '') +\r\n            (that.options.liveSearchNormalize ? ' data-normalized-text=\"' + normalizeToBase(htmlEscape(text)) + '\"' : '') +\r\n            (typeof tokens !== 'undefined' || tokens !== null ? ' data-tokens=\"' + tokens + '\"' : '') +\r\n            '>' + text +\r\n            '<span class=\"' + that.options.iconBase + ' ' + that.options.tickIcon + ' check-mark\"></span>' +\r\n            '</a>';\r\n      };\r\n\r\n      if (this.options.title && !this.multiple) {\r\n        // this option doesn't create a new <li> element, but does add a new option, so liIndex is decreased\r\n        // since liObj is recalculated on every refresh, liIndex needs to be decreased even if the titleOption is already appended\r\n        liIndex--;\r\n\r\n        if (!this.$element.find('.bs-title-option').length) {\r\n          // Use native JS to prepend option (faster)\r\n          var element = this.$element[0];\r\n          titleOption.className = 'bs-title-option';\r\n          titleOption.appendChild(document.createTextNode(this.options.title));\r\n          titleOption.value = '';\r\n          element.insertBefore(titleOption, element.firstChild);\r\n          // Check if selected attribute is already set on an option. If not, select the titleOption option.\r\n          if ($(element.options[element.selectedIndex]).attr('selected') === undefined) titleOption.selected = true;\r\n        }\r\n      }\r\n\r\n      this.$element.find('option').each(function (index) {\r\n        var $this = $(this);\r\n\r\n        liIndex++;\r\n\r\n        if ($this.hasClass('bs-title-option')) return;\r\n\r\n        // Get the class and text for the option\r\n        var optionClass = this.className || '',\r\n            inline = this.style.cssText,\r\n            text = $this.data('content') ? $this.data('content') : $this.html(),\r\n            tokens = $this.data('tokens') ? $this.data('tokens') : null,\r\n            subtext = typeof $this.data('subtext') !== 'undefined' ? '<small class=\"text-muted\">' + $this.data('subtext') + '</small>' : '',\r\n            icon = typeof $this.data('icon') !== 'undefined' ? '<span class=\"' + that.options.iconBase + ' ' + $this.data('icon') + '\"></span> ' : '',\r\n            isOptgroup = this.parentNode.tagName === 'OPTGROUP',\r\n            isDisabled = this.disabled || (isOptgroup && this.parentNode.disabled);\r\n\r\n        if (icon !== '' && isDisabled) {\r\n          icon = '<span>' + icon + '</span>';\r\n        }\r\n\r\n        if (that.options.hideDisabled && isDisabled && !isOptgroup) {\r\n          liIndex--;\r\n          return;\r\n        }\r\n\r\n        if (!$this.data('content')) {\r\n          // Prepend any icon and append any subtext to the main text.\r\n          text = icon + '<span class=\"text\">' + text + subtext + '</span>';\r\n        }\r\n\r\n        if (isOptgroup && $this.data('divider') !== true) {\r\n          var optGroupClass = ' ' + this.parentNode.className || '';\r\n\r\n          if ($this.index() === 0) { // Is it the first option of the optgroup?\r\n            optID += 1;\r\n\r\n            // Get the opt group label\r\n            var label = this.parentNode.label,\r\n                labelSubtext = typeof $this.parent().data('subtext') !== 'undefined' ? '<small class=\"text-muted\">' + $this.parent().data('subtext') + '</small>' : '',\r\n                labelIcon = $this.parent().data('icon') ? '<span class=\"' + that.options.iconBase + ' ' + $this.parent().data('icon') + '\"></span> ' : '';\r\n\r\n            label = labelIcon + '<span class=\"text\">' + label + labelSubtext + '</span>';\r\n\r\n            if (index !== 0 && _li.length > 0) { // Is it NOT the first option of the select && are there elements in the dropdown?\r\n              liIndex++;\r\n              _li.push(generateLI('', null, 'divider', optID + 'div'));\r\n            }\r\n            liIndex++;\r\n            _li.push(generateLI(label, null, 'dropdown-header' + optGroupClass, optID));\r\n          }\r\n\r\n          if (that.options.hideDisabled && isDisabled) {\r\n            liIndex--;\r\n            return;\r\n          }\r\n\r\n          _li.push(generateLI(generateA(text, 'opt ' + optionClass + optGroupClass, inline, tokens), index, '', optID));\r\n        } else if ($this.data('divider') === true) {\r\n          _li.push(generateLI('', index, 'divider'));\r\n        } else if ($this.data('hidden') === true) {\r\n          _li.push(generateLI(generateA(text, optionClass, inline, tokens), index, 'hidden is-hidden'));\r\n        } else {\r\n          if (this.previousElementSibling && this.previousElementSibling.tagName === 'OPTGROUP') {\r\n            liIndex++;\r\n            _li.push(generateLI('', null, 'divider', optID + 'div'));\r\n          }\r\n          _li.push(generateLI(generateA(text, optionClass, inline, tokens), index));\r\n        }\r\n\r\n        that.liObj[index] = liIndex;\r\n      });\r\n\r\n      //If we are not multiple, we don't have a selected item, and we don't have a title, select the first element so something is set in the button\r\n      if (!this.multiple && this.$element.find('option:selected').length === 0 && !this.options.title) {\r\n        this.$element.find('option').eq(0).prop('selected', true).attr('selected', 'selected');\r\n      }\r\n\r\n      return _li.join('');\r\n    },\r\n\r\n    findLis: function () {\r\n      if (this.$lis == null) this.$lis = this.$menu.find('li');\r\n      return this.$lis;\r\n    },\r\n\r\n    /**\r\n     * @param [updateLi] defaults to true\r\n     */\r\n    render: function (updateLi) {\r\n      var that = this,\r\n          notDisabled;\r\n\r\n      //Update the LI to match the SELECT\r\n      if (updateLi !== false) {\r\n        this.$element.find('option').each(function (index) {\r\n          var $lis = that.findLis().eq(that.liObj[index]);\r\n\r\n          that.setDisabled(index, this.disabled || this.parentNode.tagName === 'OPTGROUP' && this.parentNode.disabled, $lis);\r\n          that.setSelected(index, this.selected, $lis);\r\n        });\r\n      }\r\n\r\n      this.tabIndex();\r\n\r\n      var selectedItems = this.$element.find('option').map(function () {\r\n        if (this.selected) {\r\n          if (that.options.hideDisabled && (this.disabled || this.parentNode.tagName === 'OPTGROUP' && this.parentNode.disabled)) return;\r\n\r\n          var $this = $(this),\r\n              icon = $this.data('icon') && that.options.showIcon ? '<i class=\"' + that.options.iconBase + ' ' + $this.data('icon') + '\"></i> ' : '',\r\n              subtext;\r\n\r\n          if (that.options.showSubtext && $this.data('subtext') && !that.multiple) {\r\n            subtext = ' <small class=\"text-muted\">' + $this.data('subtext') + '</small>';\r\n          } else {\r\n            subtext = '';\r\n          }\r\n          if (typeof $this.attr('title') !== 'undefined') {\r\n            return $this.attr('title');\r\n          } else if ($this.data('content') && that.options.showContent) {\r\n            return $this.data('content');\r\n          } else {\r\n            return icon + $this.html() + subtext;\r\n          }\r\n        }\r\n      }).toArray();\r\n\r\n      //Fixes issue in IE10 occurring when no default option is selected and at least one option is disabled\r\n      //Convert all the values into a comma delimited string\r\n      var title = !this.multiple ? selectedItems[0] : selectedItems.join(this.options.multipleSeparator);\r\n\r\n      //If this is multi select, and the selectText type is count, the show 1 of 2 selected etc..\r\n      if (this.multiple && this.options.selectedTextFormat.indexOf('count') > -1) {\r\n        var max = this.options.selectedTextFormat.split('>');\r\n        if ((max.length > 1 && selectedItems.length > max[1]) || (max.length == 1 && selectedItems.length >= 2)) {\r\n          notDisabled = this.options.hideDisabled ? ', [disabled]' : '';\r\n          var totalCount = this.$element.find('option').not('[data-divider=\"true\"], [data-hidden=\"true\"]' + notDisabled).length,\r\n              tr8nText = (typeof this.options.countSelectedText === 'function') ? this.options.countSelectedText(selectedItems.length, totalCount) : this.options.countSelectedText;\r\n          title = tr8nText.replace('{0}', selectedItems.length.toString()).replace('{1}', totalCount.toString());\r\n        }\r\n      }\r\n\r\n      if (this.options.title == undefined) {\r\n        this.options.title = this.$element.attr('title');\r\n      }\r\n\r\n      if (this.options.selectedTextFormat == 'static') {\r\n        title = this.options.title;\r\n      }\r\n\r\n      //If we dont have a title, then use the default, or if nothing is set at all, use the not selected text\r\n      if (!title) {\r\n        title = typeof this.options.title !== 'undefined' ? this.options.title : this.options.noneSelectedText;\r\n      }\r\n\r\n      //strip all html-tags and trim the result\r\n      this.$button.attr('title', $.trim(title.replace(/<[^>]*>?/g, '')));\r\n      this.$button.children('.filter-option').html(title);\r\n\r\n      this.$element.trigger('rendered.bs.select');\r\n    },\r\n\r\n    /**\r\n     * @param [style]\r\n     * @param [status]\r\n     */\r\n    setStyle: function (style, status) {\r\n      if (this.$element.attr('class')) {\r\n        this.$newElement.addClass(this.$element.attr('class').replace(/selectpicker|mobile-device|bs-select-hidden|validate\\[.*\\]/gi, ''));\r\n      }\r\n\r\n      var buttonClass = style ? style : this.options.style;\r\n\r\n      if (status == 'add') {\r\n        this.$button.addClass(buttonClass);\r\n      } else if (status == 'remove') {\r\n        this.$button.removeClass(buttonClass);\r\n      } else {\r\n        this.$button.removeClass(this.options.style);\r\n        this.$button.addClass(buttonClass);\r\n      }\r\n    },\r\n\r\n    liHeight: function (refresh) {\r\n      if (!refresh && (this.options.size === false || this.sizeInfo)) return;\r\n\r\n      var newElement = document.createElement('div'),\r\n          menu = document.createElement('div'),\r\n          menuInner = document.createElement('ul'),\r\n          divider = document.createElement('li'),\r\n          li = document.createElement('li'),\r\n          a = document.createElement('a'),\r\n          text = document.createElement('span'),\r\n          header = this.options.header && this.$menu.find('.popover-title').length > 0 ? this.$menu.find('.popover-title')[0].cloneNode(true) : null,\r\n          search = this.options.liveSearch ? document.createElement('div') : null,\r\n          actions = this.options.actionsBox && this.multiple && this.$menu.find('.bs-actionsbox').length > 0 ? this.$menu.find('.bs-actionsbox')[0].cloneNode(true) : null,\r\n          doneButton = this.options.doneButton && this.multiple && this.$menu.find('.bs-donebutton').length > 0 ? this.$menu.find('.bs-donebutton')[0].cloneNode(true) : null;\r\n\r\n      text.className = 'text';\r\n      newElement.className = this.$menu[0].parentNode.className + ' open';\r\n      menu.className = 'dropdown-menu open';\r\n      menuInner.className = 'dropdown-menu inner';\r\n      divider.className = 'divider';\r\n\r\n      text.appendChild(document.createTextNode('Inner text'));\r\n      a.appendChild(text);\r\n      li.appendChild(a);\r\n      menuInner.appendChild(li);\r\n      menuInner.appendChild(divider);\r\n      if (header) menu.appendChild(header);\r\n      if (search) {\r\n        // create a span instead of input as creating an input element is slower\r\n        var input = document.createElement('span');\r\n        search.className = 'bs-searchbox';\r\n        input.className = 'form-control';\r\n        search.appendChild(input);\r\n        menu.appendChild(search);\r\n      }\r\n      if (actions) menu.appendChild(actions);\r\n      menu.appendChild(menuInner);\r\n      if (doneButton) menu.appendChild(doneButton);\r\n      newElement.appendChild(menu);\r\n\r\n      document.body.appendChild(newElement);\r\n\r\n      var liHeight = a.offsetHeight,\r\n          headerHeight = header ? header.offsetHeight : 0,\r\n          searchHeight = search ? search.offsetHeight : 0,\r\n          actionsHeight = actions ? actions.offsetHeight : 0,\r\n          doneButtonHeight = doneButton ? doneButton.offsetHeight : 0,\r\n          dividerHeight = $(divider).outerHeight(true),\r\n          // fall back to jQuery if getComputedStyle is not supported\r\n          menuStyle = typeof getComputedStyle === 'function' ? getComputedStyle(menu) : false,\r\n          $menu = menuStyle ? null : $(menu),\r\n          menuPadding = parseInt(menuStyle ? menuStyle.paddingTop : $menu.css('paddingTop')) +\r\n                        parseInt(menuStyle ? menuStyle.paddingBottom : $menu.css('paddingBottom')) +\r\n                        parseInt(menuStyle ? menuStyle.borderTopWidth : $menu.css('borderTopWidth')) +\r\n                        parseInt(menuStyle ? menuStyle.borderBottomWidth : $menu.css('borderBottomWidth')),\r\n          menuExtras =  menuPadding +\r\n                        parseInt(menuStyle ? menuStyle.marginTop : $menu.css('marginTop')) +\r\n                        parseInt(menuStyle ? menuStyle.marginBottom : $menu.css('marginBottom')) + 2;\r\n\r\n      document.body.removeChild(newElement);\r\n\r\n      this.sizeInfo = {\r\n        liHeight: liHeight,\r\n        headerHeight: headerHeight,\r\n        searchHeight: searchHeight,\r\n        actionsHeight: actionsHeight,\r\n        doneButtonHeight: doneButtonHeight,\r\n        dividerHeight: dividerHeight,\r\n        menuPadding: menuPadding,\r\n        menuExtras: menuExtras\r\n      };\r\n    },\r\n\r\n    setSize: function () {\r\n      this.findLis();\r\n      this.liHeight();\r\n\r\n      if (this.options.header) this.$menu.css('padding-top', 0);\r\n      if (this.options.size === false) return;\r\n\r\n      var that = this,\r\n          $menu = this.$menu,\r\n          $menuInner = this.$menuInner,\r\n          $window = $(window),\r\n          selectHeight = this.$newElement[0].offsetHeight,\r\n          liHeight = this.sizeInfo['liHeight'],\r\n          headerHeight = this.sizeInfo['headerHeight'],\r\n          searchHeight = this.sizeInfo['searchHeight'],\r\n          actionsHeight = this.sizeInfo['actionsHeight'],\r\n          doneButtonHeight = this.sizeInfo['doneButtonHeight'],\r\n          divHeight = this.sizeInfo['dividerHeight'],\r\n          menuPadding = this.sizeInfo['menuPadding'],\r\n          menuExtras = this.sizeInfo['menuExtras'],\r\n          notDisabled = this.options.hideDisabled ? '.disabled' : '',\r\n          menuHeight,\r\n          getHeight,\r\n          selectOffsetTop,\r\n          selectOffsetBot,\r\n          posVert = function () {\r\n            selectOffsetTop = that.$newElement.offset().top - $window.scrollTop();\r\n            selectOffsetBot = $window.height() - selectOffsetTop - selectHeight;\r\n          };\r\n\r\n      posVert();\r\n\r\n      if (this.options.size === 'auto') {\r\n        var getSize = function () {\r\n          var minHeight,\r\n              hasClass = function (className, include) {\r\n                return function (element) {\r\n                    if (include) {\r\n                        return (element.classList ? element.classList.contains(className) : $(element).hasClass(className));\r\n                    } else {\r\n                        return !(element.classList ? element.classList.contains(className) : $(element).hasClass(className));\r\n                    }\r\n                };\r\n              },\r\n              lis = that.$menuInner[0].getElementsByTagName('li'),\r\n              lisVisible = Array.prototype.filter ? Array.prototype.filter.call(lis, hasClass('hidden', false)) : that.$lis.not('.hidden'),\r\n              optGroup = Array.prototype.filter ? Array.prototype.filter.call(lisVisible, hasClass('dropdown-header', true)) : lisVisible.filter('.dropdown-header');\r\n\r\n          posVert();\r\n          menuHeight = selectOffsetBot - menuExtras;\r\n\r\n          if (that.options.container) {\r\n            if (!$menu.data('height')) $menu.data('height', $menu.height());\r\n            getHeight = $menu.data('height');\r\n          } else {\r\n            getHeight = $menu.height();\r\n          }\r\n\r\n          if (that.options.dropupAuto) {\r\n            that.$newElement.toggleClass('dropup', selectOffsetTop > selectOffsetBot && (menuHeight - menuExtras) < getHeight);\r\n          }\r\n          if (that.$newElement.hasClass('dropup')) {\r\n            menuHeight = selectOffsetTop - menuExtras;\r\n          }\r\n\r\n          if ((lisVisible.length + optGroup.length) > 3) {\r\n            minHeight = liHeight * 3 + menuExtras - 2;\r\n          } else {\r\n            minHeight = 0;\r\n          }\r\n\r\n          $menu.css({\r\n            'max-height': menuHeight + 'px',\r\n            'overflow': 'hidden',\r\n            'min-height': minHeight + headerHeight + searchHeight + actionsHeight + doneButtonHeight + 'px'\r\n          });\r\n          $menuInner.css({\r\n            'max-height': menuHeight - headerHeight - searchHeight - actionsHeight - doneButtonHeight - menuPadding + 'px',\r\n            'overflow-y': 'auto',\r\n            'min-height': Math.max(minHeight - menuPadding, 0) + 'px'\r\n          });\r\n        };\r\n        getSize();\r\n        this.$searchbox.off('input.getSize propertychange.getSize').on('input.getSize propertychange.getSize', getSize);\r\n        $window.off('resize.getSize scroll.getSize').on('resize.getSize scroll.getSize', getSize);\r\n      } else if (this.options.size && this.options.size != 'auto' && this.$lis.not(notDisabled).length > this.options.size) {\r\n        var optIndex = this.$lis.not('.divider').not(notDisabled).children().slice(0, this.options.size).last().parent().index(),\r\n            divLength = this.$lis.slice(0, optIndex + 1).filter('.divider').length;\r\n        menuHeight = liHeight * this.options.size + divLength * divHeight + menuPadding;\r\n\r\n        if (that.options.container) {\r\n          if (!$menu.data('height')) $menu.data('height', $menu.height());\r\n          getHeight = $menu.data('height');\r\n        } else {\r\n          getHeight = $menu.height();\r\n        }\r\n\r\n        if (that.options.dropupAuto) {\r\n          //noinspection JSUnusedAssignment\r\n          this.$newElement.toggleClass('dropup', selectOffsetTop > selectOffsetBot && (menuHeight - menuExtras) < getHeight);\r\n        }\r\n        $menu.css({\r\n          'max-height': menuHeight + headerHeight + searchHeight + actionsHeight + doneButtonHeight + 'px',\r\n          'overflow': 'hidden',\r\n          'min-height': ''\r\n        });\r\n        $menuInner.css({\r\n          'max-height': menuHeight - menuPadding + 'px',\r\n          'overflow-y': 'auto',\r\n          'min-height': ''\r\n        });\r\n      }\r\n    },\r\n\r\n    setWidth: function () {\r\n      if (this.options.width === 'auto') {\r\n        this.$menu.css('min-width', '0');\r\n\r\n        // Get correct width if element is hidden\r\n        var $selectClone = this.$menu.parent().clone().appendTo('body'),\r\n            $selectClone2 = this.options.container ? this.$newElement.clone().appendTo('body') : $selectClone,\r\n            ulWidth = $selectClone.children('.dropdown-menu').outerWidth(),\r\n            btnWidth = $selectClone2.css('width', 'auto').children('button').outerWidth();\r\n\r\n        $selectClone.remove();\r\n        $selectClone2.remove();\r\n\r\n        // Set width to whatever's larger, button title or longest option\r\n        this.$newElement.css('width', Math.max(ulWidth, btnWidth) + 'px');\r\n      } else if (this.options.width === 'fit') {\r\n        // Remove inline min-width so width can be changed from 'auto'\r\n        this.$menu.css('min-width', '');\r\n        this.$newElement.css('width', '').addClass('fit-width');\r\n      } else if (this.options.width) {\r\n        // Remove inline min-width so width can be changed from 'auto'\r\n        this.$menu.css('min-width', '');\r\n        this.$newElement.css('width', this.options.width);\r\n      } else {\r\n        // Remove inline min-width/width so width can be changed\r\n        this.$menu.css('min-width', '');\r\n        this.$newElement.css('width', '');\r\n      }\r\n      // Remove fit-width class if width is changed programmatically\r\n      if (this.$newElement.hasClass('fit-width') && this.options.width !== 'fit') {\r\n        this.$newElement.removeClass('fit-width');\r\n      }\r\n    },\r\n\r\n    selectPosition: function () {\r\n      this.$bsContainer = $('<div class=\"bs-container\" />');\r\n\r\n      var that = this,\r\n          pos,\r\n          actualHeight,\r\n          getPlacement = function ($element) {\r\n            that.$bsContainer.addClass($element.attr('class').replace(/form-control|fit-width/gi, '')).toggleClass('dropup', $element.hasClass('dropup'));\r\n            pos = $element.offset();\r\n            actualHeight = $element.hasClass('dropup') ? 0 : $element[0].offsetHeight;\r\n            that.$bsContainer.css({\r\n              'top': pos.top + actualHeight,\r\n              'left': pos.left,\r\n              'width': $element[0].offsetWidth\r\n            });\r\n          };\r\n\r\n      this.$button.on('click', function () {\r\n        var $this = $(this);\r\n\r\n        if (that.isDisabled()) {\r\n          return;\r\n        }\r\n\r\n        getPlacement(that.$newElement);\r\n\r\n        that.$bsContainer\r\n          .appendTo(that.options.container)\r\n          .toggleClass('open', !$this.hasClass('open'))\r\n          .append(that.$menu);\r\n      });\r\n\r\n      $(window).on('resize scroll', function () {\r\n        getPlacement(that.$newElement);\r\n      });\r\n\r\n      this.$element.on('hide.bs.select', function () {\r\n        that.$menu.data('height', that.$menu.height());\r\n        that.$bsContainer.detach();\r\n      });\r\n    },\r\n\r\n    setSelected: function (index, selected, $lis) {\r\n      if (!$lis) {\r\n        $lis = this.findLis().eq(this.liObj[index]);\r\n      }\r\n\r\n      $lis.toggleClass('selected', selected);\r\n    },\r\n\r\n    setDisabled: function (index, disabled, $lis) {\r\n      if (!$lis) {\r\n        $lis = this.findLis().eq(this.liObj[index]);\r\n      }\r\n\r\n      if (disabled) {\r\n        $lis.addClass('disabled').children('a').attr('href', '#').attr('tabindex', -1);\r\n      } else {\r\n        $lis.removeClass('disabled').children('a').removeAttr('href').attr('tabindex', 0);\r\n      }\r\n    },\r\n\r\n    isDisabled: function () {\r\n      return this.$element[0].disabled;\r\n    },\r\n\r\n    checkDisabled: function () {\r\n      var that = this;\r\n\r\n      if (this.isDisabled()) {\r\n        this.$newElement.addClass('disabled');\r\n        this.$button.addClass('disabled').attr('tabindex', -1);\r\n      } else {\r\n        if (this.$button.hasClass('disabled')) {\r\n          this.$newElement.removeClass('disabled');\r\n          this.$button.removeClass('disabled');\r\n        }\r\n\r\n        if (this.$button.attr('tabindex') == -1 && !this.$element.data('tabindex')) {\r\n          this.$button.removeAttr('tabindex');\r\n        }\r\n      }\r\n\r\n      this.$button.click(function () {\r\n        return !that.isDisabled();\r\n      });\r\n    },\r\n\r\n    tabIndex: function () {\r\n      if (this.$element.data('tabindex') !== this.$element.attr('tabindex') && \r\n        (this.$element.attr('tabindex') !== -98 && this.$element.attr('tabindex') !== '-98')) {\r\n        this.$element.data('tabindex', this.$element.attr('tabindex'));\r\n        this.$button.attr('tabindex', this.$element.data('tabindex'));\r\n      }\r\n      \r\n      this.$element.attr('tabindex', -98);\r\n    },\r\n\r\n    clickListener: function () {\r\n      var that = this,\r\n          $document = $(document);\r\n\r\n      this.$newElement.on('touchstart.dropdown', '.dropdown-menu', function (e) {\r\n        e.stopPropagation();\r\n      });\r\n\r\n      $document.data('spaceSelect', false);\r\n\r\n      this.$button.on('keyup', function (e) {\r\n        if (/(32)/.test(e.keyCode.toString(10)) && $document.data('spaceSelect')) {\r\n            e.preventDefault();\r\n            $document.data('spaceSelect', false);\r\n        }\r\n      });\r\n\r\n      this.$button.on('click', function () {\r\n        that.setSize();\r\n      });\r\n\r\n      this.$element.on('shown.bs.select', function () {\r\n        if (!that.options.liveSearch && !that.multiple) {\r\n          that.$menuInner.find('.selected a').focus();\r\n        } else if (!that.multiple) {\r\n          var selectedIndex = that.liObj[that.$element[0].selectedIndex];\r\n\r\n          if (typeof selectedIndex !== 'number' || that.options.size === false) return;\r\n\r\n          // scroll to selected option\r\n          var offset = that.$lis.eq(selectedIndex)[0].offsetTop - that.$menuInner[0].offsetTop;\r\n          offset = offset - that.$menuInner[0].offsetHeight/2 + that.sizeInfo.liHeight/2;\r\n          that.$menuInner[0].scrollTop = offset;\r\n        }\r\n      });\r\n\r\n      this.$menuInner.on('click', 'li a', function (e) {\r\n        var $this = $(this),\r\n            clickedIndex = $this.parent().data('originalIndex'),\r\n            prevValue = that.$element.val(),\r\n            prevIndex = that.$element.prop('selectedIndex');\r\n\r\n        // Don't close on multi choice menu\r\n        if (that.multiple) {\r\n          e.stopPropagation();\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        //Don't run if we have been disabled\r\n        if (!that.isDisabled() && !$this.parent().hasClass('disabled')) {\r\n          var $options = that.$element.find('option'),\r\n              $option = $options.eq(clickedIndex),\r\n              state = $option.prop('selected'),\r\n              $optgroup = $option.parent('optgroup'),\r\n              maxOptions = that.options.maxOptions,\r\n              maxOptionsGrp = $optgroup.data('maxOptions') || false;\r\n\r\n          if (!that.multiple) { // Deselect all others if not multi select box\r\n            $options.prop('selected', false);\r\n            $option.prop('selected', true);\r\n            that.$menuInner.find('.selected').removeClass('selected');\r\n            that.setSelected(clickedIndex, true);\r\n          } else { // Toggle the one we have chosen if we are multi select.\r\n            $option.prop('selected', !state);\r\n            that.setSelected(clickedIndex, !state);\r\n            $this.blur();\r\n\r\n            if (maxOptions !== false || maxOptionsGrp !== false) {\r\n              var maxReached = maxOptions < $options.filter(':selected').length,\r\n                  maxReachedGrp = maxOptionsGrp < $optgroup.find('option:selected').length;\r\n\r\n              if ((maxOptions && maxReached) || (maxOptionsGrp && maxReachedGrp)) {\r\n                if (maxOptions && maxOptions == 1) {\r\n                  $options.prop('selected', false);\r\n                  $option.prop('selected', true);\r\n                  that.$menuInner.find('.selected').removeClass('selected');\r\n                  that.setSelected(clickedIndex, true);\r\n                } else if (maxOptionsGrp && maxOptionsGrp == 1) {\r\n                  $optgroup.find('option:selected').prop('selected', false);\r\n                  $option.prop('selected', true);\r\n                  var optgroupID = $this.parent().data('optgroup');\r\n                  that.$menuInner.find('[data-optgroup=\"' + optgroupID + '\"]').removeClass('selected');\r\n                  that.setSelected(clickedIndex, true);\r\n                } else {\r\n                  var maxOptionsArr = (typeof that.options.maxOptionsText === 'function') ?\r\n                          that.options.maxOptionsText(maxOptions, maxOptionsGrp) : that.options.maxOptionsText,\r\n                      maxTxt = maxOptionsArr[0].replace('{n}', maxOptions),\r\n                      maxTxtGrp = maxOptionsArr[1].replace('{n}', maxOptionsGrp),\r\n                      $notify = $('<div class=\"notify\"></div>');\r\n                  // If {var} is set in array, replace it\r\n                  /** @deprecated */\r\n                  if (maxOptionsArr[2]) {\r\n                    maxTxt = maxTxt.replace('{var}', maxOptionsArr[2][maxOptions > 1 ? 0 : 1]);\r\n                    maxTxtGrp = maxTxtGrp.replace('{var}', maxOptionsArr[2][maxOptionsGrp > 1 ? 0 : 1]);\r\n                  }\r\n\r\n                  $option.prop('selected', false);\r\n\r\n                  that.$menu.append($notify);\r\n\r\n                  if (maxOptions && maxReached) {\r\n                    $notify.append($('<div>' + maxTxt + '</div>'));\r\n                    that.$element.trigger('maxReached.bs.select');\r\n                  }\r\n\r\n                  if (maxOptionsGrp && maxReachedGrp) {\r\n                    $notify.append($('<div>' + maxTxtGrp + '</div>'));\r\n                    that.$element.trigger('maxReachedGrp.bs.select');\r\n                  }\r\n\r\n                  setTimeout(function () {\r\n                    that.setSelected(clickedIndex, false);\r\n                  }, 10);\r\n\r\n                  $notify.delay(750).fadeOut(300, function () {\r\n                    $(this).remove();\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          if (!that.multiple) {\r\n            that.$button.focus();\r\n          } else if (that.options.liveSearch) {\r\n            that.$searchbox.focus();\r\n          }\r\n\r\n          // Trigger select 'change'\r\n          if ((prevValue != that.$element.val() && that.multiple) || (prevIndex != that.$element.prop('selectedIndex') && !that.multiple)) {\r\n            // $option.prop('selected') is current option state (selected/unselected). state is previous option state.\r\n            that.$element\r\n              .trigger('changed.bs.select', [clickedIndex, $option.prop('selected'), state])\r\n              .triggerNative('change');\r\n          }\r\n        }\r\n      });\r\n\r\n      this.$menu.on('click', 'li.disabled a, .popover-title, .popover-title :not(.close)', function (e) {\r\n        if (e.currentTarget == this) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          if (that.options.liveSearch && !$(e.target).hasClass('close')) {\r\n            that.$searchbox.focus();\r\n          } else {\r\n            that.$button.focus();\r\n          }\r\n        }\r\n      });\r\n\r\n      this.$menuInner.on('click', '.divider, .dropdown-header', function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (that.options.liveSearch) {\r\n          that.$searchbox.focus();\r\n        } else {\r\n          that.$button.focus();\r\n        }\r\n      });\r\n\r\n      this.$menu.on('click', '.popover-title .close', function () {\r\n        that.$button.click();\r\n      });\r\n\r\n      this.$searchbox.on('click', function (e) {\r\n        e.stopPropagation();\r\n      });\r\n\r\n      this.$menu.on('click', '.actions-btn', function (e) {\r\n        if (that.options.liveSearch) {\r\n          that.$searchbox.focus();\r\n        } else {\r\n          that.$button.focus();\r\n        }\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if ($(this).hasClass('bs-select-all')) {\r\n          that.selectAll();\r\n        } else {\r\n          that.deselectAll();\r\n        }\r\n      });\r\n\r\n      this.$element.change(function () {\r\n        that.render(false);\r\n      });\r\n    },\r\n\r\n    liveSearchListener: function () {\r\n      var that = this,\r\n          $no_results = $('<li class=\"no-results\"></li>');\r\n\r\n      this.$button.on('click.dropdown.data-api touchstart.dropdown.data-api', function () {\r\n        that.$menuInner.find('.active').removeClass('active');\r\n        if (!!that.$searchbox.val()) {\r\n          that.$searchbox.val('');\r\n          that.$lis.not('.is-hidden').removeClass('hidden');\r\n          if (!!$no_results.parent().length) $no_results.remove();\r\n        }\r\n        if (!that.multiple) that.$menuInner.find('.selected').addClass('active');\r\n        setTimeout(function () {\r\n          that.$searchbox.focus();\r\n        }, 10);\r\n      });\r\n\r\n      this.$searchbox.on('click.dropdown.data-api focus.dropdown.data-api touchend.dropdown.data-api', function (e) {\r\n        e.stopPropagation();\r\n      });\r\n\r\n      this.$searchbox.on('input propertychange', function () {\r\n        if (that.$searchbox.val()) {\r\n          var $searchBase = that.$lis.not('.is-hidden').removeClass('hidden').children('a');\r\n          if (that.options.liveSearchNormalize) {\r\n            $searchBase = $searchBase.not(':a' + that._searchStyle() + '(\"' + normalizeToBase(that.$searchbox.val()) + '\")');\r\n          } else {\r\n            $searchBase = $searchBase.not(':' + that._searchStyle() + '(\"' + that.$searchbox.val() + '\")');\r\n          }\r\n          $searchBase.parent().addClass('hidden');\r\n\r\n          that.$lis.filter('.dropdown-header').each(function () {\r\n            var $this = $(this),\r\n                optgroup = $this.data('optgroup');\r\n\r\n            if (that.$lis.filter('[data-optgroup=' + optgroup + ']').not($this).not('.hidden').length === 0) {\r\n              $this.addClass('hidden');\r\n              that.$lis.filter('[data-optgroup=' + optgroup + 'div]').addClass('hidden');\r\n            }\r\n          });\r\n\r\n          var $lisVisible = that.$lis.not('.hidden');\r\n\r\n          // hide divider if first or last visible, or if followed by another divider\r\n          $lisVisible.each(function (index) {\r\n            var $this = $(this);\r\n\r\n            if ($this.hasClass('divider') && (\r\n              $this.index() === $lisVisible.first().index() ||\r\n              $this.index() === $lisVisible.last().index() ||\r\n              $lisVisible.eq(index + 1).hasClass('divider'))) {\r\n              $this.addClass('hidden');\r\n            }\r\n          });\r\n\r\n          if (!that.$lis.not('.hidden, .no-results').length) {\r\n            if (!!$no_results.parent().length) {\r\n              $no_results.remove();\r\n            }\r\n            $no_results.html(that.options.noneResultsText.replace('{0}', '\"' + htmlEscape(that.$searchbox.val()) + '\"')).show();\r\n            that.$menuInner.append($no_results);\r\n          } else if (!!$no_results.parent().length) {\r\n            $no_results.remove();\r\n          }\r\n        } else {\r\n          that.$lis.not('.is-hidden').removeClass('hidden');\r\n          if (!!$no_results.parent().length) {\r\n            $no_results.remove();\r\n          }\r\n        }\r\n\r\n        that.$lis.filter('.active').removeClass('active');\r\n        if (that.$searchbox.val()) that.$lis.not('.hidden, .divider, .dropdown-header').eq(0).addClass('active').children('a').focus();\r\n        $(this).focus();\r\n      });\r\n    },\r\n\r\n    _searchStyle: function () {\r\n      var styles = {\r\n        begins: 'ibegins',\r\n        startsWith: 'ibegins'\r\n      };\r\n\r\n      return styles[this.options.liveSearchStyle] || 'icontains';\r\n    },\r\n\r\n    val: function (value) {\r\n      if (typeof value !== 'undefined') {\r\n        this.$element.val(value);\r\n        this.render();\r\n\r\n        return this.$element;\r\n      } else {\r\n        return this.$element.val();\r\n      }\r\n    },\r\n\r\n    changeAll: function (status) {\r\n      if (typeof status === 'undefined') status = true;\r\n\r\n      this.findLis();\r\n\r\n      var $options = this.$element.find('option'),\r\n          $lisVisible = this.$lis.not('.divider, .dropdown-header, .disabled, .hidden').toggleClass('selected', status),\r\n          lisVisLen = $lisVisible.length,\r\n          selectedOptions = [];\r\n\r\n      for (var i = 0; i < lisVisLen; i++) {\r\n        var origIndex = $lisVisible[i].getAttribute('data-original-index');\r\n        selectedOptions[selectedOptions.length] = $options.eq(origIndex)[0];\r\n      }\r\n\r\n      $(selectedOptions).prop('selected', status);\r\n\r\n      this.render(false);\r\n\r\n      this.$element\r\n        .trigger('changed.bs.select')\r\n        .triggerNative('change');\r\n    },\r\n\r\n    selectAll: function () {\r\n      return this.changeAll(true);\r\n    },\r\n\r\n    deselectAll: function () {\r\n      return this.changeAll(false);\r\n    },\r\n\r\n    toggle: function (e) {\r\n      e = e || window.event;\r\n      \r\n      if (e) e.stopPropagation();\r\n\r\n      this.$button.trigger('click');\r\n    },\r\n\r\n    keydown: function (e) {\r\n      var $this = $(this),\r\n          $parent = $this.is('input') ? $this.parent().parent() : $this.parent(),\r\n          $items,\r\n          that = $parent.data('this'),\r\n          index,\r\n          next,\r\n          first,\r\n          last,\r\n          prev,\r\n          nextPrev,\r\n          prevIndex,\r\n          isActive,\r\n          selector = ':not(.disabled, .hidden, .dropdown-header, .divider)',\r\n          keyCodeMap = {\r\n            32: ' ',\r\n            48: '0',\r\n            49: '1',\r\n            50: '2',\r\n            51: '3',\r\n            52: '4',\r\n            53: '5',\r\n            54: '6',\r\n            55: '7',\r\n            56: '8',\r\n            57: '9',\r\n            59: ';',\r\n            65: 'a',\r\n            66: 'b',\r\n            67: 'c',\r\n            68: 'd',\r\n            69: 'e',\r\n            70: 'f',\r\n            71: 'g',\r\n            72: 'h',\r\n            73: 'i',\r\n            74: 'j',\r\n            75: 'k',\r\n            76: 'l',\r\n            77: 'm',\r\n            78: 'n',\r\n            79: 'o',\r\n            80: 'p',\r\n            81: 'q',\r\n            82: 'r',\r\n            83: 's',\r\n            84: 't',\r\n            85: 'u',\r\n            86: 'v',\r\n            87: 'w',\r\n            88: 'x',\r\n            89: 'y',\r\n            90: 'z',\r\n            96: '0',\r\n            97: '1',\r\n            98: '2',\r\n            99: '3',\r\n            100: '4',\r\n            101: '5',\r\n            102: '6',\r\n            103: '7',\r\n            104: '8',\r\n            105: '9'\r\n          };\r\n\r\n      if (that.options.liveSearch) $parent = $this.parent().parent();\r\n\r\n      if (that.options.container) $parent = that.$menu;\r\n\r\n      $items = $('[role=menu] li', $parent);\r\n\r\n      isActive = that.$newElement.hasClass('open');\r\n\r\n      if (!isActive && (e.keyCode >= 48 && e.keyCode <= 57 || e.keyCode >= 96 && e.keyCode <= 105 || e.keyCode >= 65 && e.keyCode <= 90)) {\r\n        if (!that.options.container) {\r\n          that.setSize();\r\n          that.$menu.parent().addClass('open');\r\n          isActive = true;\r\n        } else {\r\n          that.$button.trigger('click');\r\n        }\r\n        that.$searchbox.focus();\r\n      }\r\n\r\n      if (that.options.liveSearch) {\r\n        if (/(^9$|27)/.test(e.keyCode.toString(10)) && isActive && that.$menu.find('.active').length === 0) {\r\n          e.preventDefault();\r\n          that.$menu.parent().removeClass('open');\r\n          if (that.options.container) that.$newElement.removeClass('open');\r\n          that.$button.focus();\r\n        }\r\n        // $items contains li elements when liveSearch is enabled\r\n        $items = $('[role=menu] li' + selector, $parent);\r\n        if (!$this.val() && !/(38|40)/.test(e.keyCode.toString(10))) {\r\n          if ($items.filter('.active').length === 0) {\r\n            $items = that.$menuInner.find('li');\r\n            if (that.options.liveSearchNormalize) {\r\n              $items = $items.filter(':a' + that._searchStyle() + '(' + normalizeToBase(keyCodeMap[e.keyCode]) + ')');\r\n            } else {\r\n              $items = $items.filter(':' + that._searchStyle() + '(' + keyCodeMap[e.keyCode] + ')');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!$items.length) return;\r\n\r\n      if (/(38|40)/.test(e.keyCode.toString(10))) {\r\n        index = $items.index($items.find('a').filter(':focus').parent());\r\n        first = $items.filter(selector).first().index();\r\n        last = $items.filter(selector).last().index();\r\n        next = $items.eq(index).nextAll(selector).eq(0).index();\r\n        prev = $items.eq(index).prevAll(selector).eq(0).index();\r\n        nextPrev = $items.eq(next).prevAll(selector).eq(0).index();\r\n\r\n        if (that.options.liveSearch) {\r\n          $items.each(function (i) {\r\n            if (!$(this).hasClass('disabled')) {\r\n              $(this).data('index', i);\r\n            }\r\n          });\r\n          index = $items.index($items.filter('.active'));\r\n          first = $items.first().data('index');\r\n          last = $items.last().data('index');\r\n          next = $items.eq(index).nextAll().eq(0).data('index');\r\n          prev = $items.eq(index).prevAll().eq(0).data('index');\r\n          nextPrev = $items.eq(next).prevAll().eq(0).data('index');\r\n        }\r\n\r\n        prevIndex = $this.data('prevIndex');\r\n\r\n        if (e.keyCode == 38) {\r\n          if (that.options.liveSearch) index--;\r\n          if (index != nextPrev && index > prev) index = prev;\r\n          if (index < first) index = first;\r\n          if (index == prevIndex) index = last;\r\n        } else if (e.keyCode == 40) {\r\n          if (that.options.liveSearch) index++;\r\n          if (index == -1) index = 0;\r\n          if (index != nextPrev && index < next) index = next;\r\n          if (index > last) index = last;\r\n          if (index == prevIndex) index = first;\r\n        }\r\n\r\n        $this.data('prevIndex', index);\r\n\r\n        if (!that.options.liveSearch) {\r\n          $items.eq(index).children('a').focus();\r\n        } else {\r\n          e.preventDefault();\r\n          if (!$this.hasClass('dropdown-toggle')) {\r\n            $items.removeClass('active').eq(index).addClass('active').children('a').focus();\r\n            $this.focus();\r\n          }\r\n        }\r\n\r\n      } else if (!$this.is('input')) {\r\n        var keyIndex = [],\r\n            count,\r\n            prevKey;\r\n\r\n        $items.each(function () {\r\n          if (!$(this).hasClass('disabled')) {\r\n            if ($.trim($(this).children('a').text().toLowerCase()).substring(0, 1) == keyCodeMap[e.keyCode]) {\r\n              keyIndex.push($(this).index());\r\n            }\r\n          }\r\n        });\r\n\r\n        count = $(document).data('keycount');\r\n        count++;\r\n        $(document).data('keycount', count);\r\n\r\n        prevKey = $.trim($(':focus').text().toLowerCase()).substring(0, 1);\r\n\r\n        if (prevKey != keyCodeMap[e.keyCode]) {\r\n          count = 1;\r\n          $(document).data('keycount', count);\r\n        } else if (count >= keyIndex.length) {\r\n          $(document).data('keycount', 0);\r\n          if (count > keyIndex.length) count = 1;\r\n        }\r\n\r\n        $items.eq(keyIndex[count - 1]).children('a').focus();\r\n      }\r\n\r\n      // Select focused option if \"Enter\", \"Spacebar\" or \"Tab\" (when selectOnTab is true) are pressed inside the menu.\r\n      if ((/(13|32)/.test(e.keyCode.toString(10)) || (/(^9$)/.test(e.keyCode.toString(10)) && that.options.selectOnTab)) && isActive) {\r\n        if (!/(32)/.test(e.keyCode.toString(10))) e.preventDefault();\r\n        if (!that.options.liveSearch) {\r\n          var elem = $(':focus');\r\n          elem.click();\r\n          // Bring back focus for multiselects\r\n          elem.focus();\r\n          // Prevent screen from scrolling if the user hit the spacebar\r\n          e.preventDefault();\r\n          // Fixes spacebar selection of dropdown items in FF & IE\r\n          $(document).data('spaceSelect', true);\r\n        } else if (!/(32)/.test(e.keyCode.toString(10))) {\r\n          that.$menuInner.find('.active a').click();\r\n          $this.focus();\r\n        }\r\n        $(document).data('keycount', 0);\r\n      }\r\n\r\n      if ((/(^9$|27)/.test(e.keyCode.toString(10)) && isActive && (that.multiple || that.options.liveSearch)) || (/(27)/.test(e.keyCode.toString(10)) && !isActive)) {\r\n        that.$menu.parent().removeClass('open');\r\n        if (that.options.container) that.$newElement.removeClass('open');\r\n        that.$button.focus();\r\n      }\r\n    },\r\n\r\n    mobile: function () {\r\n      this.$element.addClass('mobile-device');\r\n    },\r\n\r\n    refresh: function () {\r\n      this.$lis = null;\r\n      this.liObj = {};\r\n      this.reloadLi();\r\n      this.render();\r\n      this.checkDisabled();\r\n      this.liHeight(true);\r\n      this.setStyle();\r\n      this.setWidth();\r\n      if (this.$lis) this.$searchbox.trigger('propertychange');\r\n\r\n      this.$element.trigger('refreshed.bs.select');\r\n    },\r\n\r\n    hide: function () {\r\n      this.$newElement.hide();\r\n    },\r\n\r\n    show: function () {\r\n      this.$newElement.show();\r\n    },\r\n\r\n    remove: function () {\r\n      this.$newElement.remove();\r\n      this.$element.remove();\r\n    },\r\n\r\n    destroy: function () {\r\n        this.$newElement.before(this.$element).remove();\r\n\r\n        if (this.$bsContainer) {\r\n            this.$bsContainer.remove();\r\n        } else {\r\n            this.$menu.remove();\r\n        }\r\n\r\n        this.$element\r\n          .off('.bs.select')\r\n          .removeData('selectpicker')\r\n          .removeClass('bs-select-hidden selectpicker');\r\n    }\r\n  };\r\n\r\n  // SELECTPICKER PLUGIN DEFINITION\r\n  // ==============================\r\n  function Plugin(option, event) {\r\n    // get the args of the outer function..\r\n    var args = arguments;\r\n    // The arguments of the function are explicitly re-defined from the argument list, because the shift causes them\r\n    // to get lost/corrupted in android 2.3 and IE9 #715 #775\r\n    var _option = option,\r\n        _event = event;\r\n    [].shift.apply(args);\r\n\r\n    var value;\r\n    var chain = this.each(function () {\r\n      var $this = $(this);\r\n      if ($this.is('select')) {\r\n        var data = $this.data('selectpicker'),\r\n            options = typeof _option == 'object' && _option;\r\n\r\n        if (!data) {\r\n          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, $this.data(), options);\r\n          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), $this.data().template, options.template);\r\n          $this.data('selectpicker', (data = new Selectpicker(this, config, _event)));\r\n        } else if (options) {\r\n          for (var i in options) {\r\n            if (options.hasOwnProperty(i)) {\r\n              data.options[i] = options[i];\r\n            }\r\n          }\r\n        }\r\n\r\n        if (typeof _option == 'string') {\r\n          if (data[_option] instanceof Function) {\r\n            value = data[_option].apply(data, args);\r\n          } else {\r\n            value = data.options[_option];\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if (typeof value !== 'undefined') {\r\n      //noinspection JSUnusedAssignment\r\n      return value;\r\n    } else {\r\n      return chain;\r\n    }\r\n  }\r\n\r\n  var old = $.fn.selectpicker;\r\n  $.fn.selectpicker = Plugin;\r\n  $.fn.selectpicker.Constructor = Selectpicker;\r\n\r\n  // SELECTPICKER NO CONFLICT\r\n  // ========================\r\n  $.fn.selectpicker.noConflict = function () {\r\n    $.fn.selectpicker = old;\r\n    return this;\r\n  };\r\n\r\n  $(document)\r\n      .data('keycount', 0)\r\n      .on('keydown.bs.select', '.bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=\"menu\"], .bs-searchbox input', Selectpicker.prototype.keydown)\r\n      .on('focusin.modal', '.bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=\"menu\"], .bs-searchbox input', function (e) {\r\n        e.stopPropagation();\r\n      });\r\n\r\n  // SELECTPICKER DATA-API\r\n  // =====================\r\n  $(window).on('load.bs.select.data-api', function () {\r\n    $('.selectpicker').each(function () {\r\n      var $selectpicker = $(this);\r\n      Plugin.call($selectpicker, $selectpicker.data());\r\n    })\r\n  });\r\n})(jQuery);\r\n\n\n}));\n"],"sourceRoot":"/source/"}