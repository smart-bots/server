{"version":3,"sources":["jquery.custom.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"jquery.custom.js","sourcesContent":["'use strict';\r\n(function($) {})(jQuery);\r\nif (typeof jQuery === \"undefined\") {\r\n    throw new Error(\"SmartBots requires jQuery\");\r\n}\r\n// Jquery afterTime function\r\n/**\r\n * jQuery afterTime() method is just setTimeout function that can be used to chain with jQuery selectors\r\n * @param  {ms} sec [the callback will excute after]\r\n * @param  {function} callback [the function to excute]\r\n * @return {jQuery selectors}\r\n */\r\njQuery.fn.extend({\r\n    afterTime: function(sec, callback) {\r\n        that = $(this);\r\n        setTimeout(function() {\r\n            callback.call(that);\r\n        }, sec);\r\n        return this;\r\n    }\r\n});\r\n// Jquery exists function\r\n/**\r\n * jQuery exists() method can check if a selector matches or not\r\n * @return {boolean}\r\n */\r\njQuery.fn.exists = function() {\r\n    return this.length;\r\n}\r\n$.SmartBots = {};\r\n// Show Alert Box\r\n// $.SmartBots.alert($('.box-body'),'Yee hah','success',true,5000);\r\n$.SmartBots.alert = function(dom, html, alertType, dismissible = true, duration = 5000, insertionType = 'prepend', additionClass = '') {\r\n    switch (alertType) {\r\n        case 'success':\r\n            var icon = 'fa-check';\r\n            break;\r\n        case 'danger':\r\n            var icon = 'fa-exclamation';\r\n            break;\r\n        case 'warning':\r\n            var icon = 'fa-exclamation-triangle';\r\n            break;\r\n        case 'info':\r\n            var icon = 'fa-info-circle';\r\n            break;\r\n    }\r\n    var alertHtml = ['<div class=\"alert alert-' + alertType + (dismissible ? ' alert-dismissible' : '') + (additionClass != '' ? ' ' + additionClass : '') + '\" role=\"alert\" id=\"inserted-alert\">',\r\n        (dismissible ? '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>' : ''),\r\n        '<i class=\"fa ' + icon + '\" aria-hidden=\"true\"></i>&nbsp;&nbsp;&nbsp;',\r\n        html,\r\n        '</div>'\r\n    ].join('');\r\n    if (duration != 0) {\r\n        switch (insertionType) {\r\n            case 'append':\r\n                $(alertHtml).appendTo(dom).afterTime(duration, function() {\r\n                    $(this).slideUp('slow', function() {\r\n                        this.remove()\r\n                    });\r\n                });\r\n                break;\r\n            case 'prepend':\r\n                $(alertHtml).prependTo(dom).afterTime(duration, function() {\r\n                    $(this).slideUp('slow', function() {\r\n                        this.remove()\r\n                    });\r\n                });\r\n                break;\r\n            case 'before':\r\n                $(alertHtml).insertBefore(dom).afterTime(duration, function() {\r\n                    $(this).slideUp('slow', function() {\r\n                        this.remove()\r\n                    });\r\n                });\r\n                break;\r\n            case 'after':\r\n                $(alertHtml).insertAfter(dom).afterTime(duration, function() {\r\n                    $(this).slideUp('slow', function() {\r\n                        this.remove()\r\n                    });\r\n                });\r\n                break;\r\n        }\r\n    } else {\r\n        switch (insertionType) {\r\n            case 'append':\r\n                $(alertHtml).appendTo(dom);\r\n                break;\r\n            case 'prepend':\r\n                $(alertHtml).prependTo(dom);\r\n                break;\r\n            case 'before':\r\n                $(alertHtml).insertBefore(dom);\r\n                break;\r\n            case 'after':\r\n                $(alertHtml).insertAfter(dom);\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n$.fn.pulsate = function() {\r\n    this.pulsate({\r\n        color: '#dd4b39',\r\n        reach: 20, // how far the pulse goes in px\r\n        speed: 1000, // how long one pulse takes in ms\r\n        pause: 0, // how long the pause between pulses is in ms\r\n        glow: false, // if the glow should be shown too\r\n        repeat: 3, // will repeat forever if true, if given a number will repeat for that many times\r\n        onHover: false // if true only pulsate if user hovers over the element});\r\n    });\r\n}\r\n\r\n$.fn.scrollT0 = function(t0p = 100, duration = 1000) {\r\n    var pos = this.offset().top - t0p;\r\n    $.scrollTo(pos, duration);\r\n}\r\n\r\n$.fn.focusTo = function(top = 100, duration = 1000) {\r\n    this.scrollT0(top, duration);\r\n    this.focus();\r\n}\r\n\r\n$.fn.validate = function(data, except = [], successCallBack) {\r\n\r\n    // Require Sweetalert, scrollTo\r\n\r\n    var inputs = this.find('input[type!=\"hidden\"]');\r\n\r\n    except.forEach(function(item, index) {\r\n        inputs = inputs.not('input[name=\"' + item + '\"]');\r\n    });\r\n\r\n    inputs = inputs.toArray();\r\n\r\n    if (data['success'] == true) { // SUCCESSFULLY\r\n\r\n        successCallBack(data);\r\n\r\n    } else if (data['global'] != null) { // Has GLOBAL error\r\n\r\n        var errorHtml = ['<div class=\"alert alert-danger alert-dismissible\" style=\"display: none;\" id=\"error-alert\">',\r\n                '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">',\r\n                    '<span aria-hidden=\"true\">&times;</span>',\r\n                '</button>',\r\n                '<i class=\"fa fa-exclamation-circle m-r-5\" aria-hidden=\"true\"></i>&nbsp;',\r\n                data['global'],\r\n            '</div>'\r\n        ].join('');\r\n\r\n        if ($('#error-alert').exists()) {\r\n\r\n            $('#error-alert').slideUp('slow', 'linear', function() { this.remove();});\r\n            $(errorHtml).prependTo(this).slideDown('slow','linear').focusTo();\r\n\r\n        } else {\r\n\r\n            $(errorHtml).prependTo(this).slideDown('slow','linear').focusTo();\r\n        }\r\n\r\n        inputs.forEach(function(item, index) {\r\n            $(item).closest('.form-group').removeClass('has-error has-success has-warning');\r\n            $('span[for=\"' + $(item).attr('name') + '\"]', this).remove();\r\n        })\r\n\r\n    } else { // Has some error\r\n\r\n        $('#error-alert').slideUp('slow','linear', function() {\r\n            this.remove()\r\n        });\r\n\r\n        var focus_to = false;\r\n\r\n        inputs.forEach(function(item, index) {\r\n\r\n            var input = $(item),\r\n                input_name = input.attr('name'),\r\n                input_error = data[input.attr('name')],\r\n                input_field = input.closest('.form-group'),\r\n                input_type = input.attr('type');\r\n\r\n            $('span[for=\"' + input_name + '\"]', this).remove();\r\n\r\n            input_field.removeClass('has-error has-success has-warning animated shake');\r\n\r\n            if (input_error == null) {\r\n\r\n                input_field.addClass('has-success');\r\n\r\n            } else {\r\n\r\n                var errorHtml = ['<span class=\"help-block\" for=\"' + input_name + '\">',\r\n                    input_error,\r\n                '</span>'].join('');\r\n\r\n                input_field\r\n                    .addClass('has-error animated shake')\r\n                    .one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function(){\r\n                        $(this).removeClass(\"animated shake\");\r\n                    });\r\n\r\n                if (input_type != 'checkbox') {\r\n                    input.after(errorHtml);\r\n                } else {\r\n                    input.closest('div').append(errorHtml);\r\n                }\r\n\r\n                if (focus_to == false) {\r\n                    focus_to = true;\r\n                    input.focusTo();\r\n                }\r\n\r\n                // console.log(input_name + ' : ' + input_error);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction randStr(x){\r\n    var s = \"\";\r\n    while(s.length<x&&x>0){\r\n        var r = Math.random();\r\n        s+= (r<0.1?Math.floor(r*100):String.fromCharCode(Math.floor(r*26) + (r>0.5?97:65)));\r\n    }\r\n    return s;\r\n}\r\n\r\n$.fn.materialSwitch = function (labelClass = 'default', additionStyle = '', additionClass = '') {\r\n    var elements = this.toArray();\r\n    elements.forEach(function(item, index) {\r\n      var input = $(item);\r\n      if (input.attr('type') == 'checkbox') {\r\n        if (input.attr('id') == null) {\r\n            var id = randStr(5);\r\n            input.attr('id',id);\r\n        } else {\r\n            var id = input.attr('id');\r\n        }\r\n        input.before('<div class=\"material-switch '+additionClass+'\" id=\"'+id+'div\" style=\"'+additionStyle+'\"><label for=\"'+id+'\" class=\"label-'+labelClass+'\"></label></div>');\r\n        input.prependTo($('div#'+id+'div'));\r\n      }\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}